/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla.
 *
 * The Initial Developer of the Original Code is IBM Corporation.
 * Portions created by IBM Corporation are Copyright (C) 2003
 * IBM Corporation. All Rights Reserved.
 *
 * Contributor(s):
 *   IBM Corp.
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/**
 * nsIDNSTXTResult
 *
 * this interface represents the result of a DNS lookup for TXT
 * records. since a DNS query may return more than one resolved TXT
 * records, the result acts like an enumerator, allowing the caller to
 * easily step through the list of TXT results.
 */
[scriptable, uuid(05575556-7a4c-40ea-b4aa-f89396670cfc)]
interface nsIDNSTXTResult : nsISupports
{

    /**
     * this function returns the value of the next TXT record as a
     * string and increments the internal record iterator.
     *
     * @throws NS_ERROR_NOT_AVAILABLE if there is not another TXT
     * record in the result.
     */
    ACString getNextRecord();

    /**
     * this function returns true if there is another record in the
     * result.
     */
    boolean hasMore();

    /**
     * this function resets the internal record iterator to the first
     * record in the result.
     */
    void rewind();
};
