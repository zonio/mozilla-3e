/* ***** BEGIN LICENSE BLOCK *****
 * Mozilla 3e Calendar Extension
 * Copyright Â© 2010  Zonio s.r.o.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * ***** END LICENSE BLOCK ***** */
 
#include "nsISupports.idl"

interface nsIMsgIdentity;
interface calEeeICalendar;
interface calIGenericOperationListener;
interface calEeeIMethodQueue;
interface calIItemBase;

/**
 * Builder of {@link calEeeIMethodQueue} with main client-side user oriented
 * methods queued.
 *
 * This mainly means that authorization is performed and method according to
 * the one called on an instance is called on the server. Also ensures that
 * given operation listener is called after the final response from the server
 * is received.
 *
 * @todo consider client being a service - identity will be passed as an
 * argument to every method call
 */
[scriptable, uuid(2b0c345d-30d7-4097-a1ab-25fc1f0accb8)]
interface calEeeIClient: nsISupports {

    /**
     * Authenticates identity aqainst EEE server.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after methods call is
     * finished
     * @return method queue with methods being called on the server
     * @throws NS_ERROR_NOT_INITIALIZED if called with no identity set
     */
    calEeeIMethodQueue authenticate(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener);

    /**
     * Retrieves users matching given query.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after methods call is
     * finished
     * @param query criteria for users to return specified in EEE query
     * language
     * @return method queue with methods being called on the server
     */
    calEeeIMethodQueue getUsers(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener,
        in AString query);

    /**
     * Retrieves calendars matching given query.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after methods call is
     * finished
     * @param query criteria for calendars to return specified in EEE query
     * language
     * @return method queue with methods being called on the server
     */
    calEeeIMethodQueue getCalendars(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener,
        in AString query);

    /**
     * Retrieves calendar objects within given date and time range and
     * matching given query.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after methods call is
     * finished
     * @param calendar calendar which gets queried for items (e.g. events)
     * @param from datetime from which objects are listed
     * @param to datatime to which objects are listed
     * @return method queue with methods being called on the server
     */
    calEeeIMethodQueue queryObjects(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener,
        in calEeeICalendar calendar,
        in PRTime from,
        in PRTime to);

    /**
     * Adds calendar object to given calendar.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after methods call is
     * finished
     * @param calendar calendar where new item will be added
     * @param item item to add
     * @return method queue with methods being called on the server
     */
    calEeeIMethodQueue addObject(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener,
        in calEeeICalendar calendar,
        in calIItemBase item);

    /**
     * Updates calendar object in given calendar.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after method call is
     * finished
     * @param calendar calendar where is updated item
     * @param item updated item
     * @return method queue with methods being called on the server
     */
    calEeeIMethodQueue updateObject(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener,
        in calEeeICalendar calendar,
        in calIItemBase item);

    /**
     * Deletes calendar object in given calendar.
     *
     * @param identity executor of methods call
     * @param listener object which gets notified after methods call is
     * finished
     * @param calendar calendar where is deleted item
     * @param item deleted item
     * @return method queue with methods being called on the server
     */
    calEeeIMethodQueue deleteObject(
        in nsIMsgIdentity identity,
        in calIGenericOperationListener listener,
        in calEeeICalendar calendar,
        in calIItemBase item);

};
